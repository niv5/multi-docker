name: Multi - Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build-and-push-to-dockerhub:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      name: Check out code

    - uses: mr-smithers-excellent/docker-build-push@v5
      name: Build & push Client Docker image
      with:
        image: nivankovic/multi-client
        tags: ${{ github.run_attempt }}, latest
        registry: docker.io
        dockerfile: ./client/Dockerfile
        directory: ./client
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - uses: mr-smithers-excellent/docker-build-push@v5
      name: Build & push Nginx Docker image
      with:
        image: nivankovic/multi-nginx
        tags: ${{ github.run_attempt }}, latest
        registry: docker.io
        dockerfile: ./nginx/Dockerfile
        directory: ./nginx
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - uses: mr-smithers-excellent/docker-build-push@v5
      name: Build & push Server Docker image
      with:
        image: nivankovic/multi-server
        tags: ${{ github.run_attempt }}, latest
        registry: docker.io
        dockerfile: server/Dockerfile
        directory: server
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - uses: mr-smithers-excellent/docker-build-push@v5
      name: Build & push Worker Docker image
      with:
        image: nivankovic/multi-worker
        tags: ${{ github.run_attempt }}, latest
        registry: docker.io
        dockerfile: worker/Dockerfile
        directory: worker
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

  deploy-to-aws:

    needs: build-and-push-to-dockerhub

    runs-on: ubuntu-latest

    steps:
      - name: Chekout Latest Repo
        uses: actions/checkout@master
        
      - name: Generate Deployment Package
        run: zip -r deploy.zip * -x "**node_modules**"
        
      - name: Get Timestamp
        uses: gerred/current-time@master
        id: current-time
        
      - name: Run String Replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: '-'
          flags: 'g'
          
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: multi-docker
          environment_name: Multidocker-env-1
          version_label: "multi-docker-${{ steps.format-time.outputs.replaced }}"
          region: eu-central-1
          deployment_package: deploy.zip
